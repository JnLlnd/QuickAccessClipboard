this["DiagModeCaution"] := "~1~ is running in diagnostic mode.`n`nInformation about the app's execution will be collected in the file:`n~2~`n`nNothing will be sent without your consent.`n`nDo you want to keep diagnostic mode ON?"
this["DiagModeExit"] := "~1~ collected diagnostic information in the file ~2~."
this["DiagModeIntro"] := "Send this file to support@quickaccesspopup.com with a description of the situation requiring diagnostic"
this["DiagModeSee"] := "Do you want to see the diagnostic file?"
this["DialogAdd"] := "Add"
this["DialogAddEditRuleitle"] := "~1~ Rule: ~4~ - ~2~ ~3~"
this["DialogAddEditRuleTitle"] := "~1~ Favorite: ~4~ - ~2~ ~3~"
this["DialogAddEditRuleTitle"] := "~1~ Rule: ~4~ - ~2~ ~3~"
this["DialogAddRuleSelectPrompt"] := "Select the type of rule to add"
this["DialogAddRuleSelectTitle"] := "Add Rule - Select type - ~1~"
this["DialogAlt"] := "Alt"
this["DialogAltShort"] := "Alt"
this["DialogAlwaysOnTop"] := "Always on top"
this["DialogCancelPromptClipboard"] := "Discard changes to Clipboard?"
this["DialogCancelPromptRules"] := "Discard changes to selected rules?"
this["DialogCancelTitle"] := "Cancel - ~1~ ~2~"
this["DialogCaseType1"] := "Lower case"
this["DialogCaseType2"] := "Upper case"
this["DialogCaseType3"] := "Title case"
this["DialogClipboardDisconnected"] := "Clipboard disconnected"
this["DialogContinue"] := "Continue"
this["DialogCopy"] := "Copy"
this["DialogCtrl"] := "Control"
this["DialogCtrlLeft"] := "Left Ctrl"
this["DialogCtrlRight"] := "Right Ctrl"
this["DialogCtrlShort"] := "Ctrl"
this["DialogCut"] := "Cut"
this["DialogDelete"] := "Delete"
this["DialogEdit"] := "Edit"
this["DialogEnter"] := "Enter"
this["DialogEscape"] := "Escape"
this["DialogFind"] := "Text to find"
this["DialogFixedFont"] := "Fixed width font"
this["DialogFontSize"] := "Font size"
this["DialogInvalidHotkey"] := "With your current system keyboard layout, the hotkey ""~1~"" could not be used as a trigger for the popup menu.`n`nPlease open the ""Editor"" window from the Tray menu and click ""Options"". In this dialog box, choose another shortcut for ""~2~""."
this["DialogMenuKey"] := "Menu key"
this["DialogMouseButtonsText"] := "Left Mouse Button|Middle Mouse Button|Right Mouse Button|Special Mouse Button 1|Special Mouse Button 2|Wheel Up|Wheel Down|Wheel Left|Wheel Right|"
this["DialogMouseButtonsTextShort"] := "Left Mouse|Middle Mouse|Right Mouse|Special Mouse 1|Special Mouse 2|Wheel Up|Wheel Down|Wheel Left|Wheel Right|" ; you may shorten the existing labels by removing the word "Button" or "Mouse". This list will used in menu reminders.
this["DialogNone"] := "None"
this["DialogOr"] := "or"
this["DialogPaste"] := "Paste"
this["DialogReplaceWith"] := "Replace with"
this["DialogRuleCategory"] := "Category"
this["DialogRuleName"] := "Rule name"
this["DialogRuleNotes"] := "Notes"
this["DialogRuleSelectType"] := "Select the type of rule to add.`n`nIn the next window, enter :`n- a name for your rule`n- rules parameters (depending on the type)`n- various settings (category, notes, etc.)`n`nChoose the new rule's type and click ""~1~""."
this["DialogRuleType"] := "Type"
this["DialogSeeInvisible"] := "Invisible characters"
this["DialogSelectAll"] := "Select All"
this["DialogShift"] := "Shift"
this["DialogShiftLeft"] := "Left Shift"
this["DialogShiftRight"] := "Rigth Shift"
this["DialogShiftShort"] := "Shift"
this["DialogSpace"] := "Space"
this["DialogSubStrCharacters"] := "characters"
this["DialogSubStrFromPosition"] := "From position"
this["DialogSubStrFromStart"] := "From start"
this["DialogSubStrLength"] := "Number of characters"
this["DialogSubStrToBeforeEnd"] := "Characters before end"
this["DialogSubStrToEnd"] := "To end of string"
this["DialogTextToAdd"] := "Text to add"
this["DialogUndo"] := "Undo"
this["DialogUseTab"] := "Use tab"
this["DialogWin"] := "Windows" ; windows key name
this["DialogWindowMonitor"] := "Monitor"
this["DialogWinShort"] := "Win" ; windows key short name
this["GuiApplyRules"] := "Apply rules"
this["GuiBinary"] := "Binary"
this["GuiCancel"] := "Cancel"
this["GuiCharacters"] := "~1~ characters"
this["GuiClipboard"] := "Clipboard"
this["GuiClose"] := "Close"
this["GuiEmpty"] := "Empty"
this["GuiEmptyOrBinary"] := "Empty or binary"
this["GuiFirstUpperCase"] := "First upper case"
this["GuiOneCharacter"] := "1 character"
this["GuiRulesAvailable"] := "Available rules"
this["GuiRulesSelected"] := "Selected rules"
this["GuiSave"] := "Save"
this["GuiSaveEditor"] := "Save Clipboard"
this["GuiSelectRuleDeselect"] := "Please highlight the rule to deselect"
this["GuiSelectRuleEdit"] := "Please highlight the rule to edit"
this["GuiSelectRuleRemove"] := "Please highlight the rule to remove"
this["GuiSelectRuleSelect"] := "Please highlight the rule to select"
this["GuiTitle"] := "Editor - ~1~ ~2~"
this["GuiUnderscore2Space"] := "Underscode to space"
this["MenuEditor"] := "Editor"
this["MenuExecuteRule"] := "Execute rule"
this["MenuExitApp"] := "Exit ~1~"
this["MenuFile"] := "File"
this["MenuNoRule"] := "No rule"
this["MenuRunAtStartup"] := "Run at Startup"
this["MenuSuspendHotkeys"] := "Suspend Hotkeys"
this["OopsJLiconsError"] := "QAC tray icon not found. Make sure you updated the JLicons.dll file to ~1~:`n`n~2~"
this["OopsJLiconsOutdated"] := "The following file needs to be updated:`n`n~1~`n`nReplace it with JLicons.dll version ~2~ from the latest portable installation ZIP file and restart ~3~."
this["OopsNameExists"] := "The rule name ""~1~"" is already used.`n`nPlease select a unique rule name."
this["OopsNoEqualInRuleNames"] := "Equal sign (=) is not allowed in rule name."
this["OopsOSVerrsionError"] := "~1~ requires Window 7 or a more recent operating system."
this["OopsTitle"] := "~1~ (~2~)"
this["OopsValueMissing"] := "A value is missing..."
this["OopsWriteProtectedError"] := "It appears that ~1~ is running from a WRITE-PROTECTED folder where the configuration file ""~1~.ini"" could not be created.`n`nMove the ~1~ files to the REGULAR folder of your choice and re-run it from this folder.`n`n~1~ will quit."
this["OopsZipFileError"] := "It appears that ~1~ is running directly from a .ZIP file.`n`nYou must extract the ~1~ .EXE file from the .ZIP file to the folder of your choice before running it.`n`n~1~ will quit."
this["OptionsPopupHotkeyTitles"] := "~1~ Mouse button|~1~ Keyboard shortcut"
this["OptionsPopupHotkeyTitlesSub"] := "This mouse button will pop the ~1~ Editor over any window (except over <a>excluded applications</a>).|This hotkey will pop the ~1~ Editor over any window."
this["RulesDisabled"] := "~1~ rules disabled (~2~ seconds timeout)"
this["RulesNotUpdated"] := "~1~ rules *NOT* updated..."
this["RulesRemoved"] := "~1~ rules removed..."
this["RulesUpdated"] := "~1~ rules updated..."
this["TrayTipInstalledDetail"] := "~1~ to open the Clipboard editor or set rules"
this["TrayTipInstalledTitle"] := "~1~ ready!"
this["TypeAutoHotkey"] := "AutoHotkey code"
this["TypeAutoHotkeyHelp"] := "AutoHotkey code Help"
this["TypeChangeCase"] := "Change case"
this["TypeChangeCaseHelp"] := "Change case Help"
this["TypePrefix"] := "Prefix"
this["TypePrefixHelp"] := "Prefix Help"
this["TypeReplace"] := "Find and replace"
this["TypeReplaceHelp"] := "Find and replace Help"
this["TypeSubStr"] := "String manipulation"
this["TypeSubStrHelp"] := "String manipulation Help"
this["TypeSuffix"] := "Suffix"
this["TypeSuffixHelp"] := "Suffix Help"
this["UpdateButtonChangeLog"] := "See change log"
this["UpdateButtonDownloadPortable"] := "Download Portable zip file"
this["UpdateButtonDownloadSetup"] := "Download Setup file"
this["UpdateButtonRemind"] := "Remind me"
this["UpdateButtonSkipVersion"] := "Skip this version"
this["UpdateButtonVisit"] := "Visit web site"
this["UpdateError"] := "An error occurred while accessing the latest version number. Checking for update interrupted."
this["UpdatePrompt"] := "Update ~1~ from v~2~ to v~3~?"
this["UpdatePromptBetaContinue"] := "Do you still want to to be informed of future beta versions?"
this["UpdateTitle"] := "Update ~1~?"
this["UpdateYouHaveLatest"] := "You have the latest version: ~1~.`n`nVisit the ~2~ web page anyway?"
